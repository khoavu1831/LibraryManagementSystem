// <auto-generated />
using System;
using LibraryManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20250921140856_V2")]
    partial class V2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementSystem.Entities.NXB", b =>
                {
                    b.Property<int>("IdNXB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdNXB"));

                    b.Property<string>("Diachi")
                        .HasColumnType("longtext");

                    b.Property<string>("SDT")
                        .HasColumnType("longtext");

                    b.Property<string>("TenNXB")
                        .HasColumnType("longtext");

                    b.HasKey("IdNXB");

                    b.ToTable("NXB");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TenSanPham");

                    b.HasKey("Id");

                    b.ToTable("SanPham");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Sach", b =>
                {
                    b.Property<int>("IdSach")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdSach"));

                    b.Property<int>("IdNXB")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("longtext");

                    b.Property<int>("NamXuatBan")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongBanSao")
                        .HasColumnType("int");

                    b.Property<int>("SoTrang")
                        .HasColumnType("int");

                    b.Property<string>("TenSach")
                        .HasColumnType("longtext");

                    b.HasKey("IdSach");

                    b.HasIndex("IdNXB");

                    b.ToTable("Sach");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.TacGia", b =>
                {
                    b.Property<int>("IdTacGia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTacGia"));

                    b.Property<DateTime?>("NgaySinh")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NoiSinh")
                        .HasColumnType("longtext");

                    b.Property<string>("SDT")
                        .HasColumnType("longtext");

                    b.Property<string>("TenTacGia")
                        .HasColumnType("longtext");

                    b.HasKey("IdTacGia");

                    b.ToTable("TacGia");
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.TheLoai", b =>
                {
                    b.Property<int>("IdTheLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdTheLoai"));

                    b.Property<string>("TenTheloai")
                        .HasColumnType("longtext");

                    b.HasKey("IdTheLoai");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("Sach_TacGia", b =>
                {
                    b.Property<int>("IdSach")
                        .HasColumnType("int");

                    b.Property<int>("IdTacGia")
                        .HasColumnType("int");

                    b.HasKey("IdSach", "IdTacGia");

                    b.HasIndex("IdTacGia");

                    b.ToTable("Sach_TacGia", (string)null);
                });

            modelBuilder.Entity("Sach_TheLoai", b =>
                {
                    b.Property<int>("IdSach")
                        .HasColumnType("int");

                    b.Property<int>("IdTheLoai")
                        .HasColumnType("int");

                    b.HasKey("IdSach", "IdTheLoai");

                    b.HasIndex("IdTheLoai");

                    b.ToTable("Sach_TheLoai", (string)null);
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.Sach", b =>
                {
                    b.HasOne("LibraryManagementSystem.Entities.NXB", "NXB")
                        .WithMany("SachList")
                        .HasForeignKey("IdNXB")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NXB");
                });

            modelBuilder.Entity("Sach_TacGia", b =>
                {
                    b.HasOne("LibraryManagementSystem.Entities.Sach", null)
                        .WithMany()
                        .HasForeignKey("IdSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.Entities.TacGia", null)
                        .WithMany()
                        .HasForeignKey("IdTacGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sach_TheLoai", b =>
                {
                    b.HasOne("LibraryManagementSystem.Entities.Sach", null)
                        .WithMany()
                        .HasForeignKey("IdSach")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagementSystem.Entities.TheLoai", null)
                        .WithMany()
                        .HasForeignKey("IdTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LibraryManagementSystem.Entities.NXB", b =>
                {
                    b.Navigation("SachList");
                });
#pragma warning restore 612, 618
        }
    }
}
